# Generated from lib/isuride/owner_handler.rb with RBS::Inline

module Isuride
  class OwnerHandler < BaseHandler
    class CurrentOwner < Data
      attr_reader id(): String

      attr_reader name(): String

      attr_reader access_token(): String

      attr_reader chair_register_token(): String

      attr_reader created_at(): Time

      attr_reader updated_at(): Time

      def self.new: (String id, String name, String access_token, String chair_register_token, Time created_at, Time updated_at) -> instance
                  | (id: String, name: String, access_token: String, chair_register_token: String, created_at: Time, updated_at: Time) -> instance

      def self.members: () -> [ :id, :name, :access_token, :chair_register_token, :created_at, :updated_at ]

      def members: () -> [ :id, :name, :access_token, :chair_register_token, :created_at, :updated_at ]
    end

    @current_owner: CurrentOwner

    class OwnerPostOwnersRequest < Data
      attr_reader name(): untyped

      def self.new: (untyped name) -> instance
                  | (name: untyped) -> instance

      def self.members: () -> [ :name ]

      def members: () -> [ :name ]
    end

    # @rbs (Array[Hash[Symbol, untyped]]) -> Integer
    def sum_sales: (Array[Hash[Symbol, untyped]]) -> Integer

    # @rbs (Hash[Symbol, untyped]) -> Integer
    def calculate_sale: (Hash[Symbol, untyped]) -> Integer
  end
end
